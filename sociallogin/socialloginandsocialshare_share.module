<?php

/**
 * @file
 * Implement socialshare support for Drupal
 */

/**
 * Implements hook_theme().
 */
function socialloginandsocialshare_share_theme() {
  return array(
    'socialloginandsocialshare_social_share' => array(
      'variables' => array(
        'node' => NULL,
        'position' => NULL,
      ),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function socialloginandsocialshare_share_block_info() {
  $blocks['sharing'] = array(
    'info' => t('Social Sharing'),
  );
  return $blocks;
}

/**
 * Get Sharing script to show sharing widget.
 */
function socialloginandsocialshare_share_sharing_script() {
  drupal_add_js('//share.loginradius.com/Content/js/LoginRadius.js', array(
    'type' => 'external',
    'scope' => 'footer',
    'weight' => 5,
  ));
}

/**
 * @param $delta
 * @return array
 *
 * Implements hook_block_view().
 */
function socialloginandsocialshare_share_block_view($delta) {
  if (!user_access('administer site configuration')) {
    $block = array();
    $output = '';

    if (variable_get('socialloginandsocialshare_enable_horizontal_share') == 1) {
      socialloginandsocialshare_horizontal_script_code();
      $output .= socialloginandsocialshare_horizontal_sharing_div();
    }

    if (variable_get('socialloginandsocialshare_enable_vertical_share') == 1) {
      socialloginandsocialshare_vertical_script_code();
      $output .= socialloginandsocialshare_vertical_sharing_div();
    }

    $block['content'] = $output;
    return $block;
  }
}

/**
 * @param $node
 * @return string
 *
 * Get div to show sharing/counter widget.
 */
function theme_socialloginandsocialshare_social_share($node) {
  $output = "";
  $item_list = menu_get_object('node', 1, NULL);
  $item = empty($item_list) ? menu_get_item() : $item_list;
  $item_nid = (!empty($item->nid) ? $item->nid : "");
  $item_title_value = (!empty($item->title) ? $item->title : "");
  $item_title = empty($item_title_value) && is_array($item) && isset($item['title']) ? $item['title'] : '';
  $shareall_withexcept = variable_get('socialshare_show_pages');
  $node_withexcept = variable_get('socialshare_show_exceptpages');
  $node_except = explode(',', $node_withexcept);
  $vertical_shareall_withexcept = variable_get('socialshare_vertical_show_pages');
  $vertical_node_withexcept = variable_get('socialshare_vertical_show_exceptpages');
  $vertical_node_except = explode(',', $vertical_node_withexcept);
  $node_value = array_filter($node_except);
  $vertical_node_value = array_filter($vertical_node_except);

  if (variable_get('socialloginandsocialshare_enable_horizontal_share') == 1) {
    if ($node['position'] == 'horizontal') {
      if ($shareall_withexcept == 0) {
        if ((!in_array($item_nid, $node_except) && !in_array($item_title, $node_except)) || empty($node_value)) {
          $output .= socialloginandsocialshare_horizontal_sharing_div();
        }
      }
      elseif ($shareall_withexcept == 1) {
        if (in_array($item_nid, $node_except) OR in_array($item_title, $node_except)) {
          $output .= socialloginandsocialshare_horizontal_sharing_div();
        }
      }
    }

    socialloginandsocialshare_horizontal_script_code();
  }

  if (variable_get('socialloginandsocialshare_enable_vertical_share') == 1) {
    if ($node['position'] == 'vertical') {
      if ($vertical_shareall_withexcept == 0) {
        if ((!in_array($item_nid, $vertical_node_except) && !in_array($item_title, $vertical_node_except)) || empty($vertical_node_value)) {
          $output .= socialloginandsocialshare_vertical_sharing_div();
        }
      }
      elseif ($vertical_shareall_withexcept == 1) {
        if (in_array($item_nid, $vertical_node_except) || in_array($item_title, $vertical_node_except)) {
          $output .= socialloginandsocialshare_vertical_sharing_div();
        }
      }
    }

    socialloginandsocialshare_vertical_script_code();
  }

  return $output;
}

/**
 * @param $node
 * @param $view_mode
 * @param $langcode
 *
 * Implements hook_node_view().
 * Call theme to specific node/page.
 */
function socialloginandsocialshare_share_node_view($node, $view_mode, $langcode) {
  
  if (!user_access('administer site configuration')) {
    if (variable_get('socialloginandsocialshare_enable_horizontal_share') == 1) {
      if (variable_get('socialshare_position_top', 1)) {
        $node->content['socialshare_top'] = array(
          '#markup' => theme('socialloginandsocialshare_social_share', array(
            'node' => $node,
            'position' => 'horizontal'
          )),
          '#weight' => -10,
        );
      }

      if (variable_get('socialshare_position_bottom', 1)) {
        $node->content['socialshare_bottom'] = array(
          '#markup' => theme('socialloginandsocialshare_social_share', array(
            'node' => $node,
            'position' => 'horizontal'
          )),
          '#weight' => 10,
        );
      }
    }

    if (variable_get('socialloginandsocialshare_enable_vertical_share') == 1) {
      $node->content['socialshare'] = array(
        '#markup' => theme('socialloginandsocialshare_social_share', array(
          'node' => $node,
          'position' => 'vertical'
        )),
        '#weight' => 10,
      );
    }
  }
}

/**
 *  Horizontal Social Sharing code.
 */
function socialloginandsocialshare_horizontal_script_code() {
  module_load_include('inc', 'socialloginandsocialshare', 'socialloginandsocialshare.admin');
  $share_providers = variable_get("socialloginandsocialshare_rearrange_providers_list");
  $socialsharing_horizontal_images = variable_get('socialloginandsocialshare_share_horizontal_images');
  
  if (empty($share_providers)) {
    $share_providers = socialloginandsocialshare_get_default_sharing_networks('socialloginandsocialshare_rearrange_providers_list');
    variable_set('socialloginandsocialshare_rearrange_providers_list', $share_providers);
  }

  if (socialloginandsocialshare_in_array($socialsharing_horizontal_images)) {
    $interface = 'simpleimage';
    $size = '16';

    if ($socialsharing_horizontal_images == '0' || $socialsharing_horizontal_images == '1') {
      $interface = 'horizontal';
    }

    if ($socialsharing_horizontal_images == '0' || $socialsharing_horizontal_images == '2') {
      $size = '32';
    }

    $mysettings = array(
      'sharing' => TRUE,
      'lr_interface' => $interface,
      'providers' => implode(",", $share_providers),
      'size' => $size,
      'apikey' => trim(variable_get('socialloginandsocialshare_apikey')),
      'divwidget' => 'lrsharecontainer',
    );
  }
  else {
    $counter_providers = variable_get('socialcounter_rearrange_providers_list');

    if (empty($counter_providers)) {
      $counter_providers = socialloginandsocialshare_get_default_sharing_networks('socialcounter_rearrange_providers_list');
      variable_set('socialcounter_rearrange_providers_list', $counter_providers);
    }

    $type = 'horizontal';

    if ($socialsharing_horizontal_images == '8') {
      $type = 'vertical';
    }

    $mysettings = array(
      'counter' => TRUE,
      'lr_interface' => 'simple',
      'providers' => implode(",", $counter_providers),
      'countertype' => $type,
      'divwidget' => 'lrcounter_simplebox',
    );
  }
  drupal_add_js(array('lrsocialshare' => $mysettings), 'setting');
  drupal_add_js($GLOBALS['base_url'] . '/' . drupal_get_path('module', 'socialloginandsocialshare') . '/js/socialshare_widget.js', array(
    'type' => 'external',
    'scope' => 'footer',
    'weight' => 7
  ));
}

/**
 *  Vertical Social Sharing code.
 */
function socialloginandsocialshare_vertical_script_code() {
  module_load_include('inc', 'socialloginandsocialshare', 'socialloginandsocialshare.admin');
  $socialsharing_vertical_images = variable_get('socialloginandsocialshare_share_vertical_images');
  $socialshare_vertical_position = variable_get('socialshare_vertical_position');
  
  if ($socialsharing_vertical_images == '4' || $socialsharing_vertical_images == '5') {
    $share_providers = variable_get("socialshare_vertical_rearrange_providers_list");

    if (empty($share_providers)) {
      $share_providers = socialloginandsocialshare_get_default_sharing_networks('socialshare_vertical_rearrange_providers_list');
      variable_set('socialshare_vertical_rearrange_providers_list', $share_providers);
    }

    $size = '16';

    if ($socialsharing_vertical_images == '4') {
      $size = '32';
    }

    $position1 = 'bottom';
    $position2 = 'right';

    if ($socialshare_vertical_position == '0') {
      $position1 = 'top';
      $position2 = 'left';
    }
    elseif ($socialshare_vertical_position == '1') {
      $position1 = 'top';
      $position2 = 'right';
    }
    elseif ($socialshare_vertical_position == '2') {
      $position1 = 'bottom';
      $position2 = 'left';
    }

    $mysettings = array(
      'verticalsharing' => TRUE,
      'lr_vertical_interface' => 'Simplefloat',
      'vertical_providers' => implode(",", $share_providers),
      'vertical_size' => $size,
      'vertical_apikey' => trim(variable_get('socialloginandsocialshare_apikey')),
      'vertical_position1' => $position1,
      'vertical_position2' => $position2,
      'vertical_divwidget' => 'lrshareverticalcontainer',
    );
  }
  else {
    $counter_providers = variable_get('socialcounter_vertical_rearrange_providers_list');
    $socialshare_vertical_position = variable_get('socialshare_vertical_position');

    if (empty($counter_providers)) {
      $counter_providers = socialloginandsocialshare_get_default_sharing_networks('socialcounter_vertical_rearrange_providers_list');
      variable_set('socialcounter_vertical_rearrange_providers_list', $counter_providers);
    }
    $type = 'horizontal';

    if (variable_get('socialloginandsocialshare_share_vertical_images') == '6') {
      $type = 'vertical';
    }

    $position1 = 'bottom';
    $position2 = 'right';

    if ($socialshare_vertical_position == '0') {
      $position1 = 'top';
      $position2 = 'left';
    }
    elseif ($socialshare_vertical_position == '1') {
      $position1 = 'top';
      $position2 = 'right';
    }
    elseif ($socialshare_vertical_position == '2') {
      $position1 = 'bottom';
      $position2 = 'left';
    }

    $mysettings = array(
      'verticalcounter' => TRUE,
      'vertical_providers' => implode(",", $counter_providers),
      'vertical_countertype' => $type,
      'vertical_position1' => $position1,
      'vertical_position2' => $position2,
      'vertical_divwidget' => 'lrcounter_verticalsimplebox',
    );
  }
  drupal_add_js(array('lrsocialshare' => $mysettings), 'setting');
  drupal_add_js($GLOBALS['base_url'] . '/' . drupal_get_path('module', 'socialloginandsocialshare') . '/js/socialshare_widget.js', array(
    'type' => 'external',
    'scope' => 'footer',
    'weight' => 7
  ));
}

/**
 * @param $value
 * @return bool
 *
 * Check values in array.
 */
function socialloginandsocialshare_in_array($value) {
  if (in_array($value, array('0', '1', '2', '3'))) {
    return TRUE;
  }
  return FALSE;
}

/**
 * @param $socialsharing_horizontal_images
 * @return string
 *
 * Get horizontal div to show sharing widget.
 */
function socialloginandsocialshare_horizontal_sharing_div() {
  $socialsharing_horizontal_images = variable_get('socialloginandsocialshare_share_horizontal_images');
  
  if (socialloginandsocialshare_in_array($socialsharing_horizontal_images)) {
    socialloginandsocialshare_share_sharing_script();
    return '<div class="lrsharecontainer"></div>';
  }
  else {
    socialloginandsocialshare_share_sharing_script();
    return '<div class="lrcounter_simplebox"></div>';
  }
}

/**
 * @param $socialsharing_vertical_images
 * @return string
 *
 * Get vertical div to show sharing widget.
 */
function socialloginandsocialshare_vertical_sharing_div() {
  $socialsharing_vertical_images = variable_get('socialloginandsocialshare_share_vertical_images');
  
  if ($socialsharing_vertical_images == '4' || $socialsharing_vertical_images == '5') {
    socialloginandsocialshare_share_sharing_script();
    return '<div class="lrshareverticalcontainer"></div>';
  }
  else {
    socialloginandsocialshare_share_sharing_script();
    return '<div class="lrcounter_verticalsimplebox"></div>';
  }
}
